// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Test = require("rescript-test/src/Test.bs.js");
var Belt_List = require("rescript/lib/js/belt_List.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Belt_MapString = require("rescript/lib/js/belt_MapString.js");

function intEqual(message, a, b) {
  return Test.assertion(message, "intEqual", (function (a, b) {
                return a === b;
              }), a, b);
}

function boolEqual(message, a, b) {
  return Test.assertion(message, "boolEqual", (function (a, b) {
                return a === b;
              }), a, b);
}

function stringEqual(message, a, b) {
  return Test.assertion(message, "stringEqual", (function (a, b) {
                return a === b;
              }), a, b);
}

function stringMapEqual(message, a, b) {
  return Test.assertion(message, "stringMapEqual", (function (a, b) {
                return Belt_MapString.eq(a, b, (function (a, b) {
                              return a === b;
                            }));
              }), a, b);
}

function stringArrayEqual(message, a, b) {
  return Test.assertion(message, "stringMapEqual", (function (a, b) {
                return Belt_Array.eq(a, b, (function (a, b) {
                              return a === b;
                            }));
              }), a, b);
}

function listEqual(message, a, b) {
  return Test.assertion(message, "listEqual", (function (a, b) {
                return Belt_List.eq(a, b, (function (a, b) {
                              return a === b;
                            }));
              }), a, b);
}

function optionEqual(message, a, b) {
  return Test.assertion(message, "optionEqual", (function (a, b) {
                return Belt_Option.eq(a, b, (function (a, b) {
                              return a === b;
                            }));
              }), a, b);
}

function optionListEqual(message, a, b) {
  return Test.assertion(message, "optionEqual", (function (a, b) {
                return Belt_Option.eq(a, b, (function (a, b) {
                              return Belt_List.eq(a, b, (function (a, b) {
                                            return a === b;
                                          }));
                            }));
              }), a, b);
}

exports.intEqual = intEqual;
exports.boolEqual = boolEqual;
exports.stringEqual = stringEqual;
exports.stringMapEqual = stringMapEqual;
exports.stringArrayEqual = stringArrayEqual;
exports.listEqual = listEqual;
exports.optionEqual = optionEqual;
exports.optionListEqual = optionListEqual;
/* Test Not a pure module */
