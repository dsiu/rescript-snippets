// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml from "rescript/lib/es6/caml.js";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Stdlib__Array from "@dsiu/rescript-stdlib-fp/src/Stdlib__Array.mjs";
import * as Belt_SortArray from "rescript/lib/es6/belt_SortArray.js";
import * as Stdlib__Option from "@dsiu/rescript-stdlib-fp/src/Stdlib__Option.mjs";
import * as Stdlib__Function from "@dsiu/rescript-stdlib-fp/src/Stdlib__Function.mjs";

function log(prim) {
  console.log(prim);
}

var lessThanEq = Caml_obj.lessequal;

var keyboards = [
  3,
  1
];

var drives = [
  5,
  2,
  8
];

function pair(a, b) {
  return [
          a,
          b
        ];
}

var prim = Stdlib__Array.liftM2(pair, keyboards, drives);

console.log(prim);

function solve(b, keyboards, drives) {
  return Stdlib__Option.fromMaybe(Stdlib__Option.arrayToMayBe(Belt_SortArray.stableSortBy(Stdlib__Array.liftM2((function (prim0, prim1) {
                              return prim0 + prim1 | 0;
                            }), keyboards, drives).filter(function (__x) {
                          return Caml_obj.lessequal(__x, b);
                        }), (function (extra, extra$1) {
                        return Stdlib__Function.flip(Caml.int_compare, extra, extra$1);
                      }))), -1);
}

var prim$1 = solve(10, keyboards, drives);

console.log(prim$1);

var A;

var O;

var flip = Stdlib__Function.flip;

var sort = Belt_SortArray.stableSortBy;

var b = 10;

export {
  log ,
  A ,
  O ,
  flip ,
  sort ,
  lessThanEq ,
  b ,
  keyboards ,
  drives ,
  pair ,
  solve ,
}
/* prim Not a pure module */
