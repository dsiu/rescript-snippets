// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Database = require("database");
var Caml_option = require("rescript/lib/js/caml_option.js");

function extractValue(pair) {
  return pair.value;
}

function valueIfName(pair, nameToMatch) {
  if (pair.name === nameToMatch) {
    return Caml_option.some(pair.value);
  }
  
}

function showAndReturn(argument) {
  console.log(argument);
  return argument;
}

function addDog(dog) {
  Database.add("dogs", dog);
  
}

function addFriend(friend) {
  Database.add("friends", friend);
  
}

function addBook(book) {
  Database.add("books", book);
  
}

var Database$1 = {
  addDog: addDog,
  addFriend: addFriend,
  addBook: addBook
};

Database.add("dogs", {
      name: "lassie",
      colour: "red and white"
    });

var tableName = "friends";

var FriendSchema = {
  tableName: tableName
};

var tableName$1 = "dogs";

var DogSchema = {
  tableName: tableName$1
};

var tableName$2 = "books";

var BookSchema = {
  tableName: tableName$2
};

function MakeSchema(Schema) {
  var add = function (item) {
    Database.add(Schema.tableName, item);
    
  };
  var get = function (id) {
    return Database.get(id);
  };
  return {
          add: add,
          get: get
        };
}

function add(item) {
  Database.add(tableName, item);
  
}

function get(id) {
  return Database.get(id);
}

var Friends = {
  add: add,
  get: get
};

function add$1(item) {
  Database.add(tableName$1, item);
  
}

function get$1(id) {
  return Database.get(id);
}

var Dogs = {
  add: add$1,
  get: get$1
};

function add$2(item) {
  Database.add(tableName$2, item);
  
}

function get$2(id) {
  return Database.get(id);
}

var Books = {
  add: add$2,
  get: get$2
};

Database.add(tableName, {
      name: "lizzi",
      age: 8
    });

function Collection(Item) {
  return {};
}

var User = {};

var UsersCollection = {};

var Collections = {};

function doSome(firestore) {
  return firestore.collections("users").orderBy("name").asList();
}

var Collection$1 = {};

var User$1 = {};

function doSome$1(firestore) {
  return firestore.collections("users").orderBy("name").asList();
}

var Solution2 = {
  Collection: Collection$1,
  User: User$1,
  doSome: doSome$1
};

var hundredsOfApples = {
  name: "apple",
  value: 480
};

exports.hundredsOfApples = hundredsOfApples;
exports.extractValue = extractValue;
exports.valueIfName = valueIfName;
exports.showAndReturn = showAndReturn;
exports.Database = Database$1;
exports.FriendSchema = FriendSchema;
exports.DogSchema = DogSchema;
exports.BookSchema = BookSchema;
exports.MakeSchema = MakeSchema;
exports.Friends = Friends;
exports.Dogs = Dogs;
exports.Books = Books;
exports.Collection = Collection;
exports.User = User;
exports.UsersCollection = UsersCollection;
exports.Collections = Collections;
exports.doSome = doSome;
exports.Solution2 = Solution2;
/*  Not a pure module */
