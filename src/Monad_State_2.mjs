// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";

function log(prim) {
  console.log(prim);
}

function log2(prim0, prim1) {
  console.log(prim0, prim1);
}

function StateMonad(State) {
  var bind = function (m, f, s) {
    var match = Curry._1(m, s);
    return Curry._2(f, match[0], match[1]);
  };
  var $$return = function (a, s) {
    return [
            a,
            s
          ];
  };
  var access = function (m) {
    return Curry._1(m, State.empty)[0];
  };
  var put = function (s, param) {
    return [
            undefined,
            s
          ];
  };
  var get = function (s) {
    return [
            s,
            s
          ];
  };
  return {
          bind: bind,
          $$return: $$return,
          access: access,
          put: put,
          get: get
        };
}

function bind(m, f, s) {
  var match = Curry._1(m, s);
  return Curry._2(f, match[0], match[1]);
}

function $$return(a, s) {
  return [
          a,
          s
        ];
}

function access(m) {
  return Curry._1(m, 0)[0];
}

function put(s, param) {
  return [
          undefined,
          s
        ];
}

function get(s) {
  return [
          s,
          s
        ];
}

var IntStateMonad = {
  bind: bind,
  $$return: $$return,
  access: access,
  put: put,
  get: get
};

function blah(param) {
  return [
          1,
          param
        ];
}

function blah2(param) {
  return bind(blah, (function (i) {
                var partial_arg = i + 1 | 0;
                return function (param) {
                  return [
                          partial_arg,
                          param
                        ];
                };
              }), param);
}

var prim = access(blah2);

console.log(prim);

export {
  log ,
  log2 ,
  StateMonad ,
  IntStateMonad ,
}
/* prim Not a pure module */
