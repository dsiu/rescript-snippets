// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Primitive_int from "rescript/lib/es6/Primitive_int.js";

function handle(n, divisor, label) {
  let match = Primitive_int.mod_(n, divisor);
  if (match !== 0) {
    return {
      TAG: "Unhandled",
      _0: n
    };
  } else {
    return {
      TAG: "Handled",
      _0: label
    };
  }
}

function ifUnhandledDo(result, f) {
  if (result.TAG === "Unhandled") {
    return f(result._0);
  } else {
    return {
      TAG: "Handled",
      _0: result._0
    };
  }
}

function lastStep(x) {
  if (x.TAG === "Unhandled") {
    return String(x._0);
  } else {
    return x._0;
  }
}

function fizzbuzz(n) {
  return lastStep(ifUnhandledDo(ifUnhandledDo(handle(n, 15, "FizzBuzz"), none => handle(none, 3, "Fizz")), none => handle(none, 5, "Buzz")));
}

export {
  handle,
  ifUnhandledDo,
  lastStep,
  fizzbuzz,
}
/* No side effect */
