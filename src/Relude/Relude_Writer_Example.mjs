// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Relude_Array from "relude/src/Relude_Array.mjs";
import * as Relude_WriterT from "relude/src/Relude_WriterT.mjs";

function log(prim) {
  console.log(prim);
}

function log2(prim0, prim1) {
  console.log(prim0, prim1);
}

var WriterLog = Curry._1(Relude_WriterT.WriterLog.List.WithEntry, {});

var WriterList = Relude_WriterT.Writer.WithLog(WriterLog);

var map = WriterList.Infix.$less$$great;

var voidLeft = WriterList.Infix.$$great;

var flipMap = WriterList.Infix.$less$$$great;

var bind = WriterList.Infix.$great$great$eq;

var writer = Curry._2(bind, Curry._1(WriterList.pure, 42), (function (a) {
        return Curry._2(bind, Curry._2(voidLeft, Relude_WriterT.Writer.tell({
                            hd: "a = " + String(a),
                            tl: /* [] */0
                          }), (a << 1)), (function (a) {
                      return Curry._2(bind, Curry._2(voidLeft, Relude_WriterT.Writer.tell({
                                          hd: "a = " + String(a),
                                          tl: /* [] */0
                                        }), a + 5 | 0), (function (a) {
                                    return Curry._2(voidLeft, Relude_WriterT.Writer.tell({
                                                    hd: "a = " + String(a),
                                                    tl: /* [] */0
                                                  }), a);
                                  }));
                    }));
      }));

var match = Relude_WriterT.Writer.runWriterT(writer);

var writerLogs = match[1];

var a = match[0];

console.log(a);

var prim = Relude_Array.fromList(writerLogs);

console.log(prim);

var List;

var WriterT;

var Writer;

export {
  List ,
  WriterT ,
  Writer ,
  log ,
  log2 ,
  WriterLog ,
  WriterList ,
  map ,
  voidLeft ,
  flipMap ,
  bind ,
  writer ,
  a ,
  writerLogs ,
}
/* WriterLog Not a pure module */
