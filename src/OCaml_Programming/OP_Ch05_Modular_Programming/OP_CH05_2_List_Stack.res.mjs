// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Primitive_exceptions from "@rescript/runtime/lib/es6/Primitive_exceptions.js";

function is_empty(list) {
  return list === 0;
}

function push(x, list) {
  return {
    hd: x,
    tl: list
  };
}

let Empty = /* @__PURE__ */Primitive_exceptions.create("OP_CH05_2_List_Stack.ListStack.Empty");

function peek(list) {
  if (list !== 0) {
    return list.hd;
  }
  throw {
    RE_EXN_ID: Empty,
    Error: new Error()
  };
}

function pop(list) {
  if (list !== 0) {
    return list.tl;
  }
  throw {
    RE_EXN_ID: Empty,
    Error: new Error()
  };
}

let ListStack = {
  Empty: Empty,
  empty: /* [] */0,
  is_empty: is_empty,
  push: push,
  peek: peek,
  pop: pop
};

let M = {
  x: 42
};

let Inner = {
  x: 42
};

let M_ = {
  Inner: Inner
};

let M$1 = {
  x: 0,
  z: 2
};

let M_5_2_4_MZ = {
  z: 2
};

let M_5_2_4 = {
  M: M$1,
  MX: M$1,
  MZ: M_5_2_4_MZ,
  MXZ: M$1
};

function f(x) {
  return x;
}

let IdFun = {
  f: f
};

let A = {
  a: 0
};

let AB = {
  a: 0,
  b: true
};

let AC = {
  a: 0,
  c: /* 'c' */99
};

let EX_1 = {
  A: A,
  AB: AB,
  AC: AC
};

let ListStackAlias = ListStack;

let Iid = IdFun;

export {
  ListStack,
  ListStackAlias,
  M,
  M_,
  M_5_2_4,
  IdFun,
  Iid,
  EX_1,
}
/* No side effect */
