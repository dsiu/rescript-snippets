// Generated by ReScript, PLEASE EDIT WITH CARE

import * as List from "rescript/lib/es6/List.js";
import * as Option from "rescript/lib/es6/Option.js";
import * as Ordering from "rescript/lib/es6/Ordering.js";
import * as Primitive_object from "rescript/lib/es6/Primitive_object.js";

function insert(k, v, m) {
  return {
    hd: [
      k,
      v
    ],
    tl: m
  };
}

function lookup(k, m) {
  return Option.getExn(List.getAssoc(m, k, Primitive_object.equal), undefined);
}

function keys(m) {
  return List.sort(List.map(m, prim => prim[0]), (a, b) => Ordering.fromInt(Primitive_object.compare(a, b)));
}

function bindings(m) {
  return List.map(keys(m), k => [
    k,
    lookup(k, m)
  ]);
}

let M = {
  empty: /* [] */0,
  insert: insert,
  lookup: lookup,
  bindings: bindings
};

export {
  M,
}
/* No side effect */
