// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Caml_option = require("rescript/lib/js/caml_option.js");

function list_find(_l, f) {
  while(true) {
    var l = _l;
    if (!l) {
      return ;
    }
    var x = l.hd;
    if (Curry._1(f, x)) {
      return Caml_option.some(x);
    }
    _l = l.tl;
    continue ;
  };
}

console.log(list_find({
          hd: 1,
          tl: {
            hd: 3,
            tl: {
              hd: 5,
              tl: {
                hd: 2,
                tl: /* [] */0
              }
            }
          }
        }, (function (x) {
            return x > 3;
          })));

console.log(list_find({
          hd: 1,
          tl: {
            hd: 3,
            tl: {
              hd: 5,
              tl: {
                hd: 2,
                tl: /* [] */0
              }
            }
          }
        }, (function (x) {
            return x > 10;
          })));

console.log(list_find({
          hd: "a",
          tl: {
            hd: "B",
            tl: {
              hd: "C",
              tl: /* [] */0
            }
          }
        }, (function (x) {
            return x === x.toUpperCase();
          })));

var If_not_found = {};

function flexible_find(_l, f, if_not_found) {
  while(true) {
    var l = _l;
    if (l) {
      var hd = l.hd;
      if (Curry._1(f, hd)) {
        return Caml_option.some(hd);
      }
      _l = l.tl;
      continue ;
    }
    if (typeof if_not_found !== "number") {
      return Caml_option.some(if_not_found._0);
    }
    if (if_not_found !== 0) {
      return ;
    }
    throw {
          RE_EXN_ID: "Not_found",
          Error: new Error()
        };
  };
}

exports.list_find = list_find;
exports.If_not_found = If_not_found;
exports.flexible_find = flexible_find;
/*  Not a pure module */
