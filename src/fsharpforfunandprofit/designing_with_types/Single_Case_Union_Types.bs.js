// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var FP_Utils = require("../../FP_Utils.bs.js");
var Belt_List = require("rescript/lib/js/belt_List.js");
var Caml_option = require("rescript/lib/js/caml_option.js");

function createWithCont(success, failure, s) {
  var match = /^\S+@\S+\.\S+$/.exec(s);
  if (match !== null) {
    return Curry._1(success, /* EmailAddress */{
                _0: s
              });
  } else {
    return Curry._1(failure, "Email address must contain an @ symbol");
  }
}

function create(s) {
  var success = function (e) {
    return Caml_option.some(e);
  };
  var failure = function (param) {
    
  };
  return createWithCont(success, failure, s);
}

function apply(f, e) {
  return Curry._1(f, e._0);
}

function value(e) {
  return FP_Utils.id(e._0);
}

var EmailAddress = {
  createWithCont: createWithCont,
  create: create,
  apply: apply,
  value: value
};

function createWithCont$1(success, failure, s) {
  var match = /^\d{5}$/.exec(s);
  if (match !== null) {
    return Curry._1(success, /* ZipCode */{
                _0: s
              });
  } else {
    return Curry._1(failure, "Zip code must ");
  }
}

function create$1(s) {
  var success = function (e) {
    return Caml_option.some(e);
  };
  var failure = function (param) {
    
  };
  return createWithCont$1(success, failure, s);
}

function apply$1(f, e) {
  return Curry._1(f, e._0);
}

function value$1(e) {
  return FP_Utils.id(e._0);
}

var ZipCode = {
  createWithCont: createWithCont$1,
  create: create$1,
  apply: apply$1,
  value: value$1
};

function createWithCont$2(success, failure, s) {
  var s$p = s.toUpperCase();
  if (Belt_List.has({
          hd: "AZ",
          tl: {
            hd: "CA",
            tl: {
              hd: "NY",
              tl: /* [] */0
            }
          }
        }, s$p, FP_Utils.eq)) {
    return Curry._1(success, /* StateCode */{
                _0: s
              });
  } else {
    return Curry._1(failure, "State is not in list");
  }
}

function create$2(s) {
  var success = function (e) {
    return Caml_option.some(e);
  };
  var failure = function (param) {
    
  };
  return createWithCont$2(success, failure, s);
}

function apply$2(f, e) {
  return Curry._1(f, e._0);
}

function value$2(e) {
  return FP_Utils.id(e._0);
}

var StateCode = {
  createWithCont: createWithCont$2,
  create: create$2,
  apply: apply$2,
  value: value$2
};

var PersonalName = {};

var EmailContactInfo = {};

var PostalAddress = {};

var PostalContactInfo = {};

var Contact = {};

exports.EmailAddress = EmailAddress;
exports.ZipCode = ZipCode;
exports.StateCode = StateCode;
exports.PersonalName = PersonalName;
exports.EmailContactInfo = EmailContactInfo;
exports.PostalAddress = PostalAddress;
exports.PostalContactInfo = PostalContactInfo;
exports.Contact = Contact;
/* No side effect */
