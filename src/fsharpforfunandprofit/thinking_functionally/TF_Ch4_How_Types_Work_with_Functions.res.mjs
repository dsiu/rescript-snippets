// Generated by ReScript, PLEASE EDIT WITH CARE


function evalWith5ThenAdd2(fn) {
  return fn(5) + 2 | 0;
}

console.log(8);

function times3(x) {
  return x * 3 | 0;
}

console.log(17);

function add(x, y) {
  return x + y | 0;
}

function add1(extra) {
  return 1 + extra | 0;
}

function add2(extra) {
  return 2 + extra | 0;
}

console.log(6);

console.log(7);

function evalWith5AsInt(fn) {
  return fn(5);
}

function evalWith5AsFloat(fn) {
  return fn(5);
}

function evalWith5AsString(fn) {
  return fn + "5";
}

function printInt(x) {
  console.log(`x is ` + String(x));
}

console.log("hello world");

function printHelloFn() {
  console.log("hello world");
}

console.log(printHelloFn);

console.log((console.log("hello world"), undefined));

function toString(x) {
  return String(x._0);
}

function onAStick(x) {
  return String(x._0) + " on a stick";
}

console.log(String(1) + " on a stick");

console.log(String(2.0) + " on a stick");

function multiParamFn(p1, p2, p3, p4) {
  
}

function intermediateFn1(extra, extra$1, extra$2) {
  
}

function intermediateFn2(extra, extra$1) {
  return intermediateFn1(false, extra, extra$1);
}

function intermediateFn3(extra) {
  return intermediateFn1(false, "hello", extra);
}

let finalResult = intermediateFn1(false, "hello", 3.141);

let whatIsThis;

let printHello;

let a = [
  "hello",
  1
];

export {
  evalWith5ThenAdd2,
  times3,
  add,
  add1,
  add2,
  evalWith5AsInt,
  evalWith5AsFloat,
  evalWith5AsString,
  whatIsThis,
  printInt,
  printHello,
  printHelloFn,
  toString,
  onAStick,
  a,
  multiParamFn,
  intermediateFn1,
  intermediateFn2,
  intermediateFn3,
  finalResult,
}
/*  Not a pure module */
