// Generated by ReScript, PLEASE EDIT WITH CARE


function log(prim) {
  console.log(prim);
}

function compose(f, g, a) {
  return g(f(a));
}

function add(n, x) {
  return x + n | 0;
}

function times(n, x) {
  return Math.imul(x, n);
}

function add1Times2(extra) {
  return ((extra + 1 | 0) << 1);
}

function add5Times3(extra) {
  return Math.imul(extra + 5 | 0, 3);
}

let prim = add1Times2(1);

console.log(prim);

let prim$1 = add5Times3(2);

console.log(prim$1);

function twice(f) {
  return extra => f(f(extra));
}

function add1(__x) {
  return __x + 1 | 0;
}

function add1Twice(extra) {
  return (extra + 1 | 0) + 1 | 0;
}

let prim$2 = add1Twice(9);

console.log(prim$2);

function add1ThenMultiply(extra) {
  let __x = extra + 1 | 0;
  return extra => Math.imul(extra, __x);
}

let prim$3 = add1ThenMultiply(2)(7);

console.log(prim$3);

function f(x, y, z) {
  return x + Math.imul(y, z) | 0;
}

function g(param) {
  return param[0] + Math.imul(param[1], param[2]) | 0;
}

console.log("f");

let prim$4 = 7;

console.log(prim$4);

console.log("g");

let prim$5 = g([
  1,
  2,
  3
]);

console.log(prim$5);

function h(x, y, z) {
  
}

function h1(extra, extra$1) {
  return h(1, extra, extra$1);
}

function h2(extra) {
  return h(1, true, extra);
}

let h3;

export {
  log,
  compose,
  add,
  times,
  add1Times2,
  add5Times3,
  twice,
  add1,
  add1Twice,
  add1ThenMultiply,
  f,
  g,
  h,
  h1,
  h2,
  h3,
}
/* prim Not a pure module */
