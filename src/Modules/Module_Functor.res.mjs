// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Database from "database";
import * as Primitive_option from "@rescript/runtime/lib/es6/Primitive_option.js";

function extractValue(pair) {
  return pair.value;
}

function valueIfName(pair, nameToMatch) {
  if (pair.name === nameToMatch) {
    return Primitive_option.some(pair.value);
  }
}

function showAndReturn(argument) {
  console.log(argument);
  return argument;
}

function addDog(dog) {
  Database.add("dogs", dog);
}

function addFriend(friend) {
  Database.add("friends", friend);
}

function addBook(book) {
  Database.add("books", book);
}

let Database$1 = {
  addDog: addDog,
  addFriend: addFriend,
  addBook: addBook
};

Database.add("dogs", {
  name: "lassie",
  colour: "red and white"
});

let tableName = "friends";

let FriendSchema = {
  tableName: tableName
};

let tableName$1 = "dogs";

let DogSchema = {
  tableName: tableName$1
};

let tableName$2 = "books";

let BookSchema = {
  tableName: tableName$2
};

function MakeSchema(Schema) {
  let add = item => {
    Database.add(Schema.tableName, item);
  };
  let get = id => Database.get(id);
  return {
    add: add,
    get: get
  };
}

function add(item) {
  Database.add(tableName, item);
}

function get(id) {
  return Database.get(id);
}

let Friends = {
  add: add,
  get: get
};

function add$1(item) {
  Database.add(tableName$1, item);
}

function get$1(id) {
  return Database.get(id);
}

let Dogs = {
  add: add$1,
  get: get$1
};

function add$2(item) {
  Database.add(tableName$2, item);
}

function get$2(id) {
  return Database.get(id);
}

let Books = {
  add: add$2,
  get: get$2
};

Database.add(tableName, {
  name: "lizzi",
  age: 8
});

function Collection(Item) {
  return {};
}

let User = {};

let UsersCollection = {};

let Collections = {};

function doSome(firestore) {
  return firestore.collections("users").orderBy("name").asList();
}

let Collection$1 = {};

let User$1 = {};

function doSome$1(firestore) {
  return firestore.collections("users").orderBy("name").asList();
}

let Solution2 = {
  Collection: Collection$1,
  User: User$1,
  doSome: doSome$1
};

let hundredsOfApples = {
  name: "apple",
  value: 480
};

export {
  hundredsOfApples,
  extractValue,
  valueIfName,
  showAndReturn,
  Database$1 as Database,
  FriendSchema,
  DogSchema,
  BookSchema,
  MakeSchema,
  Friends,
  Dogs,
  Books,
  Collection,
  User,
  UsersCollection,
  Collections,
  doSome,
  Solution2,
}
/*  Not a pure module */
