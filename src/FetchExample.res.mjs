// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Array from "rescript/lib/es6/Belt_Array.js";
import * as Stdlib_Exn from "rescript/lib/es6/Stdlib_Exn.js";
import * as NodeFetch from "node-fetch";
import * as Stdlib_Promise from "rescript/lib/es6/Stdlib_Promise.js";
import * as Primitive_exceptions from "rescript/lib/es6/Primitive_exceptions.js";

globalThis.fetch = NodeFetch;

let NodeFetchPolyfill = {};

let Response = {};

function login(email, password) {
  let body = {
    email: email,
    password: password
  };
  let params = {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify(body)
  };
  return Stdlib_Promise.$$catch(globalThis.fetch("https://reqres.in/api/login", params).then(res => res.json()).then(data => {
    let msg = data.error;
    let tmp;
    if (msg == null) {
      let token = data.token;
      tmp = (token == null) ? ({
          TAG: "Error",
          _0: "Didn't return a token"
        }) : ({
          TAG: "Ok",
          _0: token
        });
    } else {
      tmp = {
        TAG: "Error",
        _0: msg
      };
    }
    return Promise.resolve(tmp);
  }), e => {
    let msg;
    if (e.RE_EXN_ID === Stdlib_Exn.$$Error) {
      let msg$1 = e._1.message;
      msg = msg$1 !== undefined ? "JS exception occurred: " + msg$1 : "Some other JS value has been thrown";
    } else {
      msg = "Unexpected error occurred";
    }
    return Promise.resolve({
      TAG: "Error",
      _0: msg
    });
  });
}

let Login = {
  login: login
};

function getProducts(token, param) {
  let params = {
    Authorization: "Bearer " + token
  };
  return Stdlib_Promise.$$catch(globalThis.fetch("https://reqres.in/api/products", params).then(res => res.json()).then(data => {
    let data$1 = data.data;
    let ret = (data$1 == null) ? [] : data$1;
    return Promise.resolve({
      TAG: "Ok",
      _0: ret
    });
  }), e => {
    let msg;
    if (e.RE_EXN_ID === Stdlib_Exn.$$Error) {
      let msg$1 = e._1.message;
      msg = msg$1 !== undefined ? "JS exception occurred: " + msg$1 : "Some other JS value has been thrown";
    } else {
      msg = "Unexpected error occurred";
    }
    return Promise.resolve({
      TAG: "Error",
      _0: msg
    });
  });
}

let Product = {
  getProducts: getProducts
};

let FailedRequest = /* @__PURE__ */Primitive_exceptions.create("FetchExample.FailedRequest");

Stdlib_Promise.$$catch(login("emma.wong@reqres.in", "pw").then(ret => {
  if (ret.TAG !== "Ok") {
    return Promise.reject({
      RE_EXN_ID: FailedRequest,
      _1: "Login error - " + ret._0
    });
  }
  console.log("Login successful! Querying data...");
  return getProducts(ret._0, undefined);
}).then(result => {
  let tmp;
  if (result.TAG === "Ok") {
    console.log("\nAvailable Products:\n---");
    tmp = Belt_Array.forEach(result._0, p => {
      console.log(String(p.id) + " - " + p.name);
    });
  } else {
    console.log("Could not query products: " + result._0);
    tmp = undefined;
  }
  return Promise.resolve(tmp);
}), e => {
  if (e.RE_EXN_ID === FailedRequest) {
    console.log("Operation failed! " + e._1);
  } else {
    console.log("Unknown error");
  }
  return Promise.resolve();
});

export {
  NodeFetchPolyfill,
  Response,
  Login,
  Product,
  FailedRequest,
}
/*  Not a pure module */
