// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Primitive_int from "rescript/lib/es6/Primitive_int.js";
import * as Stdlib__Array from "@dsiu/rescript-stdlib-fp/src/Stdlib__Array.res.mjs";
import * as Belt_SortArray from "rescript/lib/es6/Belt_SortArray.js";
import * as Stdlib__Option from "@dsiu/rescript-stdlib-fp/src/Stdlib__Option.res.mjs";
import * as Primitive_object from "rescript/lib/es6/Primitive_object.js";
import * as Stdlib__Function from "@dsiu/rescript-stdlib-fp/src/Stdlib__Function.res.mjs";

function log(prim) {
  console.log(prim);
}

let lessThanEq = Primitive_object.lessequal;

let keyboards = [
  3,
  1
];

let drives = [
  5,
  2,
  8
];

function pair(a, b) {
  return [
    a,
    b
  ];
}

let prim = Stdlib__Array.liftM2(pair, keyboards, drives);

console.log(prim);

function solve(b, keyboards, drives) {
  return Stdlib__Option.fromMaybe(Stdlib__Option.arrayToMayBe(Belt_SortArray.stableSortBy(Stdlib__Array.liftM2((prim0, prim1) => prim0 + prim1 | 0, keyboards, drives).filter(__x => Primitive_object.lessequal(__x, b)), (extra, extra$1) => Stdlib__Function.flip(Primitive_int.compare, extra, extra$1))), -1);
}

let prim$1 = solve(10, keyboards, drives);

console.log(prim$1);

let A;

let O;

let flip = Stdlib__Function.flip;

let sort = Belt_SortArray.stableSortBy;

let b = 10;

export {
  log,
  A,
  O,
  flip,
  sort,
  lessThanEq,
  b,
  keyboards,
  drives,
  pair,
  solve,
}
/* prim Not a pure module */
